plugins {
    id 'groovy'
    id 'java'
    id 'net.researchgate.release' version '2.6.0'
    id 'maven'
}

group 'xml-query'

sourceCompatibility = 1.8

// Using a setter method
project.buildDir = 'target'

description = """"""


repositories {
    // First check local cache before accessing central repository
    // mavenRepo name:'Local', urls: "file://" + System.properties['user.home'] + "/.m2/repository"
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'org.xmlunit:xmlunit-core:2.6.2'
}

release {
    failOnUnversionedFiles = false
    tagTemplate = '$name-$version'
}

task(startmessage){
    doLast {
        println 'starting build'
    }
}

task(printversion)  {
    doLast{
        println project.version
    }
}

beforeReleaseBuild.dependsOn startmessage
afterReleaseBuild.dependsOn printversion

configurations { deployerJars }

dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-ssh:2.12'
}

uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            String repo = version.endsWith('SNAPSHOT') ? 'scp://issdugdata.net/home/maven/m2repo/snapshots' : 'scp://issdugdata.net/home/maven/m2repo/releases'
            repository(url: repo) {
                authentication(userName: project.findProperty('deployU') ?: "", password: project.findProperty('deployP') ?: "")
            }
        }
    }
}
